# AD's Michael Kors PopUp

## Project Proposal
*Title:* AD's Michael Kors PopUp

*Members:* Amelia Soucy and Desayna Christmas 

*Objective:* Through this project, our goal is to provide a platform where consumers can easily view 10 different Michael Kors purses and ultimately add one (or many!) to their cart. Our visually appealing HTML page will list, describe, and depict the purse options, as well as calculate the total price of purses added to customers' carts via a FastAPI.

*Tech Stack and Resources:* 

- Demo code and notes from our class sessions:
    - HTML pages, CSS styling, and JavaScript demos
    - Amazon example 
    - API and JSON demos
    - Bitcoin and 404 FastAPI examples
- Homeworks:
    - Homework – Python Programming 1
    - Homework - Python Programming 2
    - Homework – API
    - Homework – Web
- Michael Kors website: https://www.michaelkors.com/women/handbags/
- HTML online editor: https://www.w3schools.com/html/html_editor.asp
- ChatGPT
- Professor Li's insight/demos/answers to our questions via Slack and WebEx

## Project Overview
Through this project, our goal is to provide a platform where consumers can easily view 10 different Michael Kors purses and ultimately add one (or many!) to their cart. Our visually appealing HTML page will list, describe, and depict the purse options, as well as calculate the total price of purses added to customers' carts via a FastAPI.

## Usage Guidelines
Users can browse through our limited inventory of hand selected bags, read the description, look at the price and add to cart if they decide to buy the bag. Users are also able to look at their cart and see the total amount of their purchase. 

## Dependencies

Libraries:
- fastapi (FastAPI and Request classes)
- fastapi.responses (HTMLResponse class)
- fastapi.templating (Jinja2Templates class)
- fastapi.staticfiles (StaticFiles class)
- json 

## Project Structure
the main.html is the front page of our website. The cart page is also another page users can click on to view their purchase amount. The CSS and JS files connect to the html pages for styling and creating "add to cart" buttons. The cart calculator connects to the web page in order to calculate the total amount of items. The 404 error page is also connected to the webpage in order to provide a customized error screen. The JSON file stores the database of purses and their prices. 


## Collaboration Information



## Acknowledgements


## Reflection

