# AD's Michael Kors PopUp

## Project Proposal
*Title:* AD's Michael Kors PopUp

*Members:* Amelia Soucy and Desayna Christmas 

*Objective:* Through this project, our goal is to provide a platform where consumers can easily view 10 different Michael Kors purses and ultimately add one (or many!) to their cart. Our visually appealing HTML page will list, briefly describe, and depict the purse options, as well as calculate the total price of purses added to customers' carts via a FastAPI.

*Tech Stack and Resources:* 

- Demo code and notes from our class sessions:
    - HTML pages, CSS styling, and JavaScript demos
    - Amazon example 
    - API and JSON demos
    - Bitcoin and 404 FastAPI examples
- Homeworks:
    - Homework – Python Programming 1
    - Homework - Python Programming 2
    - Homework – API
    - Homework – Web
- Michael Kors website: https://www.michaelkors.com/women/handbags/
- HTML online editor: https://www.w3schools.com/html/html_editor.asp
- ChatGPT
- Professor Li's insight/demos/answers to our questions via Slack and WebEx

## Project Overview


## Usage Guidelines


## Dependencies

Libraries:
- fastapi (FastAPI and Request classes)
- fastapi.responses (HTMLResponse class)
- fastapi.templating (Jinja2Templates class)
- fastapi.staticfiles (StaticFiles class)
- fastapi.exceptions (HTTPException class)
- os
- json 

## Project Structure


## Collaboration Information

Amelia and Desayna collaborated well to complete this project! While we were in constant communication (via iMessage and WebEx) throughout and finished the project together to link the back- and front-end code, our individual responsibilities were generally as follows:
    - Amelia: back-end code, including creating the data file in json, creating the images folder with all 10 purse images locally stored, and building out the cart calculator functions and 404 error FastAPI in Python
    - Desayna: front-end code, including building out the HTML main and cart pages, as well as creating and implementing a CSS stylesheet and JavaScript features

## Acknowledgements

In addition to the aforementioned libraries (listed in the "Dependencies" section), we used the following resources to complete this project:
    - ChatGPT
    - Assistance from Professor Li via Slack and WebEx
    - Homeworks and in-class demos
    - Examples and information publicly available on GitHub

## Reflection

Overall, we really enjoyed working together on this project! It was fun to implement bits and pieces of class examples, while also exploring new code and writing code from scratch. This project definitely tied together our understanding of the different aspects we learned throughout the semester, such as how a json API can be used as data for an HTML page.

That said, 
